{"version":3,"sources":["contexts/EmployeeContext.js","components/EditForm.js","components/Employee.js","components/Modals/AddModal/AddForm.js","components/Pagination.js","components/EmployeeList.js","App.js","index.js"],"names":["EmployeeContext","createContext","EmployeeContextProvider","props","useReducer","employees","action","type","id","uuidv4","name","employee","email","address","phone","filter","map","updatedEmployee","localStorage","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","sortedEmployees","sort","a","b","Provider","value","children","EditForm","theEmployee","useContext","useState","SetName","SetEmail","SetAddress","SetPhone","Form","onSubmit","e","preventDefault","Group","Control","placeholder","onChange","target","required","as","rows","Button","variant","block","Employee","show","setShow","handleClose","OverlayTrigger","overlay","Tooltip","onClick","className","data-toggle","Modal","onHide","Header","closeButton","Title","Body","Footer","AddForm","newEmployee","setNewEmployee","onInputChange","Pagination","pages","setCurrentPage","currentEmployees","numOfPages","i","push","currentButton","setCurrentButton","length","href","prev","page","index","EmployeeList","showAlert","setShowAlert","currentPage","setTimeout","indexOfLastEmployee","indexOfFirstEmployee","slice","totalPagesNum","Math","ceil","Alert","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d360473.chunk.js","sourcesContent":["import { createContext, useEffect, useReducer} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const EmployeeContext = createContext();\n\nconst EmployeeContextProvider = (props) => {\n\n/*     const [employees, setEmployees] = useState([\n        {id:uuidv4(), name: 'Thomas Hardy', email: 'thomashardy@mail.com', address: '89 Chiaroscuro Rd, Portland, USA', phone: '(171) 555-2222'},\n        {id:uuidv4(), name: 'Dominique Perrier', email: 'dominiqueperrier@mail.com', address: 'Obere Str. 57, Berlin, Germany', phone: '(313) 555-5735'},\n        {id:uuidv4(), name: 'Maria Anders', email: 'mariaanders@mail.com', address: '25, rue Lauriston, Paris, France', phone: '(503) 555-9931'},\n        {id:uuidv4(), name: 'Fran Wilson', email: 'franwilson@mail.com', address: 'C/ Araquil, 67, Madrid, Spain', phone: '(204) 619-5731'},\n        {id:uuidv4(), name: 'Martin Blank', email: 'martinblank@mail.com', address: 'Via Monte Bianco 34, Turin, Italy', phone: '(480) 631-2097'}\n]) */\n\n\n    const reducer = (employees, action) => {\n        switch(action.type) {\n            case 'add_employee':\n                return [...employees, {\n                    id: uuidv4(),\n                    name: action.employee.name, \n                    email: action.employee.email,\n                    address: action.employee.address,\n                    phone: action.employee.phone,\n                }]\n\n            case 'remove_employee':\n                return employees.filter(employee => employee.id !== action.id)\n\n            case 'update_employee':\n                return employees.map((employee) => (employee.id === action.id ? action.updatedEmployee : employee))\n\n            default:\n                return employees;\n        }\n    }\n\n   const[employees, dispatch] = useReducer(reducer, [],\n    \n    () => {\n        const employees = localStorage.getItem('employees')\n        return employees ? JSON.parse(employees) : [];\n    }\n)\n\n    useEffect(() => {\n        localStorage.setItem('employees', JSON.stringify(employees))\n    })\n\n    const sortedEmployees = employees.sort((a,b) => (a.name < b.name ? -1 : 1 ));\n\n\n    return (\n        <EmployeeContext.Provider value={{sortedEmployees, dispatch}}>\n            {props.children}\n        </EmployeeContext.Provider>\n    )\n}\n\nexport default EmployeeContextProvider;","import { Form, Button } from 'react-bootstrap';\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport { useContext, useState} from 'react';\n\nconst EditForm = ({theEmployee}) => {\n\n    const { dispatch } = useContext(EmployeeContext);\n\n    const employee = theEmployee;\n    const id = employee.id;\n\n    const [name, SetName] = useState(employee.name);\n    const [email, SetEmail] = useState(employee.email);\n    const [address, SetAddress] = useState(employee.address);\n    const [phone, SetPhone] = useState(employee.phone);\n\n    const updatedEmployee = {id, name, email, address, phone};\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //updateEmployee(id, updatedEmployee);\n        dispatch({type:'update_employee', id, updatedEmployee})\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Name *\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e)=>SetName(e.target.value)}\n                    required \n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email *\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e)=>SetEmail(e.target.value)}\n                    required \n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Address *\"\n                    name=\"address\"\n                    rows={3} \n                    value={address}\n                    onChange={(e)=>SetAddress(e.target.value)}\n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={(e)=>SetPhone(e.target.value)}\n                />\n            </Form.Group>\n\n            <Button variant=\"success\" type=\"submit\" block>\n                Update Employee\n            </Button>\n        </Form>\n    )\n}\n\nexport default EditForm;","import { useContext, useState, useEffect } from 'react';\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport { Button, Modal, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport EditForm from './EditForm';\n\n\nconst Employee = ({ employee }) => {\n\n    const { dispatch } = useContext(EmployeeContext);\n\n    const [show, setShow] = useState(false)\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true)\n\n    useEffect(() => {\n        handleClose();\n    }, [employee])\n\n    return (\n\n        <>\n\n            <td>{employee.name}</td>\n            <td>{employee.email}</td>\n            <td>{employee.address}</td>\n            <td>{employee.phone}</td>\n            <td>\n                <OverlayTrigger\n                    overlay={\n                        <Tooltip id={`tooltip-top`}>\n                            Edit\n                        </Tooltip>\n                    }>\n                    <button onClick={handleShow} className=\"btn text-warning btn-act\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE254;</i></button>\n                </OverlayTrigger>\n                <OverlayTrigger\n                    overlay={\n                        <Tooltip id={`tooltip-top`}>\n                            Delete\n                        </Tooltip>\n                    }>\n                <button onClick={() => dispatch({type: 'remove_employee', id: employee.id})} className=\"btn text-danger btn-act\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE872;</i></button>\n                </OverlayTrigger>\n            </td>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header className=\"modal-header\" closeButton>\n                    <Modal.Title>\n                        Update Employee\n                </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <EditForm theEmployee={employee} />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close Modal\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n\n    )\n}\n\nexport default Employee;","import { Form, Button } from 'react-bootstrap';\nimport { EmployeeContext } from '../../../contexts/EmployeeContext';\nimport { useContext, useState } from 'react';\n\n// The project was  done without PORTAL\n\nconst AddForm = () => {\n\n    const { dispatch } = useContext(EmployeeContext);\n\n/*     const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [phone, setPhone] = useState(\"\"); */\n\n    const [newEmployee, setNewEmployee] = useState({\n        name:\"\", email:\"\", address: \"\", phone: \"\"\n    })\n\n    const {name, email, address, phone } = newEmployee;\n\n    const onInputChange = (e) => {\n        setNewEmployee({...newEmployee, [e.target.name]: e.target.value})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //addEmployee(name, email, address, phone)\n        dispatch({type: 'add_employee', employee : {\n            name, email, address, phone\n        }})\n    }\n\n\n    return (\n        <Form onSubmit={handleSubmit}>\n\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Name *\"\n                    name=\"name\"\n                    value={name}\n                    onChange={e => onInputChange(e)}\n                    required \n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email *\"\n                    name=\"email\"\n                    value={email}\n                    onChange={e => onInputChange(e)}\n                    required \n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Address *\"\n                    name=\"address\"\n                    value={address}\n                    onChange={e => onInputChange(e)}\n                    rows={3} \n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={e => onInputChange(e)}\n                />\n            </Form.Group>\n\n            <Button variant=\"success\" type=\"submit\" block>\n                Add New Employee\n            </Button>\n        </Form>\n    )\n}\n\nexport default AddForm;","import { useEffect } from \"react\";\nimport {useState } from \"react\";\n\nconst Pagination = ({pages, setCurrentPage, currentEmployees, sortedEmployees}) => {\n\n\n    const numOfPages = [];\n\n    for (let i=1; i <= pages; i++) {\n        numOfPages.push(i);\n    }\n\n    const [currentButton, setCurrentButton] = useState(1);\n\n    useEffect(()=> {\n        setCurrentPage(currentButton)\n    }, [currentButton, setCurrentPage])\n\n    return (\n        <div className=\"clearfix\">\n        <div className=\"hint-text\">Showing <b>{currentEmployees.length}</b> out of <b>{sortedEmployees.length}</b> entries</div>\n        <ul className=\"pagination\">\n            <li className={`${currentButton === 1 ? 'page-item disabled' : 'page-item'}`}><a href=\"#!\" className=\"page-link\"\n                onClick = { () => setCurrentButton((prev) => prev === 1 ? prev : prev - 1 )}\n            >Previous</a></li>\n            {\n                numOfPages.map((page, index) => {\n                    return (\n                        <li key={index} className={`${currentButton === page ? 'page-item active' : 'page-item'}`}><a href=\"#!\" className=\"page-link\"\n                            onClick = {() => setCurrentButton(page)}\n                        >{page}</a></li>\n                    )\n                    \n                })\n            }\n\n            <li className={`${currentButton === numOfPages.length ? 'page-item disabled' : 'page-item'}`}><a href=\"#!\" className=\"page-link\"\n                onClick = { () => setCurrentButton((prev) => prev === numOfPages.length ? prev : prev + 1 )}\n            >Next</a></li>\n\n        </ul>\n    </div>\n    )\n}\n\nexport default Pagination;\n\n\n","import { useContext, useEffect, useState } from 'react';\nimport Employee from './Employee';\nimport { Button, Modal, Alert } from 'react-bootstrap';\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport AddForm from './Modals/AddModal/AddForm';\nimport Pagination from './Pagination';\n\nconst EmployeeList = () => {\n  const { sortedEmployees } =\n    useContext(EmployeeContext); /* useContext hook arkyluu sorted employees'ti alyp alabyz */\n\n  const [showAlert, setShowAlert] = useState(false); /* Alert componentti korgozuuchu state */\n  const [show, setShow] = useState(false); /* Modalka korsotkon komponent */\n  const [currentPage, setCurrentPage] = useState(1); /* uchurdagy page */\n  const employeesPerPage = 2; /* bir page'te kancha employees bolushun belgileit\n   */\n\n  const handleClose = () => setShow(false);/* bul func menen modalka jogotobuz */\n  const handleShow = () => setShow(true);/* bul func menen modalka tiriltebiz */\n  //const handleShowAlert = () => setShowAlert(true);\n\n  const handleShowAlert = () => {/* alert functciyasy ishteit */\n    setShowAlert(true);/* alert func ishtetti */\n    setTimeout(() => {\n      setShowAlert(false);/*  al emi bul api menen 2 sekundan kiin ocyushun kamsyzdadyk*/\n    }, 2000);\n  };\n\n  useEffect(() => {/* ar bir sortedEmployees ozgorgon saiyn modalkany jogotot jana show alert kylat antkeni seccessfully updated degeni */\n    handleClose();\n\n    return () => {\n      handleShowAlert();\n    };\n  }, [sortedEmployees]);\n\n  // LOGIC OF PAGINATION\n\n  const indexOfLastEmployee = currentPage * employeesPerPage;/* akyrky indexti taap alyshybyz kerek */\n  const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;/* birinchi indexti taap alyshybyz kerek */\n  const currentEmployees = sortedEmployees.slice(indexOfFirstEmployee, indexOfLastEmployee);/* arry listtin ichinden birinchi index menen akryky index'ke tuuralap kesip alabyz */\n  const totalPagesNum = Math.ceil(sortedEmployees.length / employeesPerPage);/* jalpy massivdin sanynn bir page'te kancha element bolushu kerek degen tsifraga bolup koiobuz jana bizge ceil metodu menen tuuralap alabyz */\n  return (\n    <>\n      <div className='table-title'>\n        <div className='row'>\n          <div className='col-sm-6'>\n            <h2>\n              Manage <b>Employees</b>\n            </h2>\n          </div>\n          <div className='col-sm-6'>\n            <Button onClick={handleShow} className='btn btn-success text-white' data-toggle='modal'>\n              <i className='material-icons'>&#xE147;</i> <span>Add New Employee</span>\n            </Button>\n          </div>\n        </div>\n      </div>\n      {/* header blogu bolup eseptelinet */}\n\n      <Alert show={showAlert} variant='success'>\n        Employee List successfully updated!.\n      </Alert>{/* bul jerde alert blogu bar al ar bir update bolgon saiyn ekranda react berip turat */}\n\n      <table className='table table-striped table-hover'>{/* table'dyn jardamy menen bizge kerektuu employeestin tablitsasyn tuzup alabyz */}\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Address</th>\n            <th>Phone</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{/* bul jakta currentEmployees map'tyn jardamy menen render bolot datalar employee'ge jiberilip anyn ichinde datalar oz ozuncho render bolot */}\n          {currentEmployees.map((employee) => (\n            <tr key={employee.id}>\n              <Employee employee={employee} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <Pagination\n        pages={totalPagesNum}\n        setCurrentPage={setCurrentPage}\n        currentEmployees={currentEmployees}\n        sortedEmployees={sortedEmployees}\n      />\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header className='modal-header' closeButton>\n          <Modal.Title>Add Employee</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <AddForm />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='secondary' onClick={handleClose}>\n            Close Modal\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default EmployeeList;\n\n// .sort((a,b) => a.name.localeCompare(b.name))\n\n// sort((a,b) => (a.name < b.name ? -1 : 1 ))\n","import EmployeeList from './components/EmployeeList';\nimport EmployeeContextProvider from './contexts/EmployeeContext';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n\n      <div className=\"container-xl\">\n        <div className=\"table-responsive\">\n          <div className=\"table-wrapper\">\n            <EmployeeContextProvider> {/* //biz bul jerden contextke dostup taratabyz */}\n              <EmployeeList /> {/* bizdin baardyk logica jana elementter kamtylgan komponenet\n               */}\n            </EmployeeContextProvider>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}